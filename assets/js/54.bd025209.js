(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{560:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-微服务介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-微服务介绍"}},[t._v("#")]),t._v(" 1. 微服务介绍")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ichensw/drawing-bed/raw/master/image/F11.png",alt:"F11"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ichensw/drawing-bed/raw/master/image/F12.png",alt:"F12"}})]),t._v(" "),a("p",[t._v("前面说的SOA，英文翻译过来是面向服务。微服务，似乎也是服务，都是对系统进行拆分。因此两者非常容易混淆，但其实却有一些差别：")]),t._v(" "),a("p",[t._v("微服务的特点：")]),t._v(" "),a("ul",[a("li",[t._v("单一职责：微服务中每一个服务都对应唯一的业务能力，做到单一职责")]),t._v(" "),a("li",[t._v("微：微服务的服务拆分粒度很小，例如一个用户管理就可以作为一个服务。每个服务虽小，但“五脏俱全”。")]),t._v(" "),a("li",[t._v("面向服务：面向服务是说每个服务都要对外暴露Rest风格服务接口API。并不关心服务的技术实现，做到与平台和语言无关，也不限定用什么技术实现，只要提供Rest的接口即可。")]),t._v(" "),a("li",[t._v("自治：自治是说服务间互相独立，互不干扰\n"),a("ul",[a("li",[t._v("团队独立：每个服务都是一个独立的开发团队，人数不能过多。")]),t._v(" "),a("li",[t._v("技术独立：因为是面向服务，提供Rest接口，使用什么技术没有别人干涉")]),t._v(" "),a("li",[t._v("前后端分离：采用前后端分离开发，提供统一Rest接口，后端不用再为PC、移动段开发不同接口")]),t._v(" "),a("li",[t._v("数据库分离：每个服务都使用自己的数据源")]),t._v(" "),a("li",[t._v("部署独立，服务间虽然有调用，但要做到服务重启不影响其它服务。有利于持续集成和持续交付。每个服务都是独立的组件，可复用，可替换，降低耦合，易维护")])])])]),t._v(" "),a("p",[t._v("微服务结构图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ichensw/drawing-bed/raw/master/image/8.png",alt:"8"}})]),t._v(" "),a("h2",{attrs:{id:"_2-服务调用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务调用方式"}},[t._v("#")]),t._v(" 2. 服务调用方式")]),t._v(" "),a("h3",{attrs:{id:"_2-1-rpc和http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-rpc和http"}},[t._v("#")]),t._v(" 2.1.RPC和HTTP")]),t._v(" "),a("p",[t._v("无论是微服务还是SOA，都面临着服务间的远程调用。那么服务间的远程调用方式有哪些呢？")]),t._v(" "),a("p",[t._v("常见的远程调用方式有以下2种：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("RPC：Remote Produce Call远程过程调用，类似的还有RMI。自定义数据格式，基于原生TCP通信，速度快，效率高。早期的webservice，现在热门的dubbo，都是RPC的典型代表")])]),t._v(" "),a("li",[a("p",[t._v("Http：http其实是一种网络传输协议，基于TCP，规定了数据传输的格式。现在客户端浏览器与服务端通信基本都是采用Http协议，也可以用来进行远程服务调用。缺点是消息封装臃肿，优势是对服务的提供和调用方没有任何技术限定，自由灵活，更符合微服务理念。")]),t._v(" "),a("p",[t._v("现在热门的Rest风格，就可以通过http协议来实现。")])])]),t._v(" "),a("p",[t._v("如果你们公司全部采用Java技术栈，那么使用Dubbo作为微服务架构是一个不错的选择。")]),t._v(" "),a("p",[t._v("相反，如果公司的技术栈多样化，而且你更青睐Spring家族，那么SpringCloud搭建微服务是不二之选。在我们的项目中，我们会选择SpringCloud套件，因此我们会使用Http方式来实现服务间调用。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-http客户端工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-http客户端工具"}},[t._v("#")]),t._v(" 2.2.Http客户端工具")]),t._v(" "),a("p",[t._v("既然微服务选择了Http，那么我们就需要考虑自己来实现对请求和响应的处理。不过开源世界已经有很多的http客户端工具，能够帮助我们做这些事情，例如：")]),t._v(" "),a("ul",[a("li",[t._v("HttpClient")]),t._v(" "),a("li",[t._v("OKHttp")]),t._v(" "),a("li",[t._v("URLConnection")])]),t._v(" "),a("p",[t._v("接下来，不过这些不同的客户端，API各不相同")]),t._v(" "),a("h3",{attrs:{id:"_2-3-spring的resttemplate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-spring的resttemplate"}},[t._v("#")]),t._v(" 2.3.Spring的RestTemplate")]),t._v(" "),a("p",[t._v("Spring提供了一个RestTemplate模板工具类，对基于Http的客户端进行了封装，并且实现了对象与json的序列化和反序列化，非常方便。RestTemplate并没有限定Http的客户端类型，而是进行了抽象，目前常用的3种都有支持：")]),t._v(" "),a("ul",[a("li",[t._v("HttpClient")]),t._v(" "),a("li",[t._v("OkHttp")]),t._v(" "),a("li",[t._v("JDK原生的URLConnection（默认的）")])]),t._v(" "),a("p",[t._v("我们导入课前资料提供的demo工程：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ichensw/drawing-bed/raw/master/image/10.png",alt:"10"}})]),t._v(" "),a("p",[t._v("首先在项目中注册一个"),a("code",[t._v("RestTemplate")]),t._v("对象，可以在启动类位置注册：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpDemoApplication")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpDemoApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestTemplate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("在测试类中直接"),a("code",[t._v("@Autowired")]),t._v("注入：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RunWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringRunner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpDemoApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpDemoApplicationTests")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestTemplate")]),t._v(" restTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("httpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用springboot案例中的rest接口")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost/user/1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("ul",[a("li",[t._v("通过RestTemplate的getForObject()方法，传递url地址及实体类的字节码，RestTemplate会自动发起请求，接收响应，并且帮我们对响应结果进行反序列化。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ichensw/drawing-bed/raw/master/image/9.png",alt:"9"}})]),t._v(" "),a("p",[t._v("学习完了Http客户端工具，接下来就可以正式学习微服务了。")]),t._v(" "),a("h2",{attrs:{id:"_3-初识springcloud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-初识springcloud"}},[t._v("#")]),t._v(" 3.初识SpringCloud")]),t._v(" "),a("p",[t._v("微服务是一种架构方式，最终肯定需要技术架构去实施。")]),t._v(" "),a("p",[t._v("微服务的实现方式很多，但是最火的莫过于Spring Cloud了。为什么？")]),t._v(" "),a("ul",[a("li",[t._v("后台硬：作为Spring家族的一员，有整个Spring全家桶靠山，背景十分强大。")]),t._v(" "),a("li",[t._v("技术强：Spring作为Java领域的前辈，可以说是功力深厚。有强力的技术团队支撑，一般人还真比不了")]),t._v(" "),a("li",[t._v("群众基础好：可以说大多数程序员的成长都伴随着Spring框架，试问：现在有几家公司开发不用Spring？SpringCloud与Spring的各个框架无缝整合，对大家来说一切都是熟悉的配方，熟悉的味道。")]),t._v(" "),a("li",[t._v("使用方便：相信大家都体会到了SpringBoot给我们开发带来的便利，而SpringCloud完全支持SpringBoot的开发，用很少的配置就能完成微服务框架的搭建")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-简介"}},[t._v("#")]),t._v(" 3.1.简介")]),t._v(" "),a("p",[t._v("SpringCloud是Spring旗下的项目之一，"),a("a",{attrs:{href:"http://projects.spring.io/spring-cloud/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网地址：http://projects.spring.io/spring-cloud/"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Spring最擅长的就是集成，把世界上最好的框架拿过来，集成到自己的项目中。")]),t._v(" "),a("p",[t._v("SpringCloud也是一样，它将现在非常流行的一些技术整合到一起，实现了诸如：配置管理，服务发现，智能路由，负载均衡，熔断器，控制总线，集群状态等等功能。其主要涉及的组件包括：")]),t._v(" "),a("ul",[a("li",[t._v("Eureka：服务治理组件，包含服务注册中心，服务注册与发现机制的实现。（服务治理，服务注册/发现）")]),t._v(" "),a("li",[t._v("Zuul：网关组件，提供智能路由，访问过滤功能")]),t._v(" "),a("li",[t._v("Ribbon：客户端负载均衡的服务调用组件（客户端负载）")]),t._v(" "),a("li",[t._v("Feign：服务调用，给予Ribbon和Hystrix的声明式服务调用组件 （声明式服务调用）")]),t._v(" "),a("li",[t._v("Hystrix：容错管理组件，实现断路器模式，帮助服务依赖中出现的延迟和为故障提供强大的容错能力。(熔断、断路器，容错)")])]),t._v(" "),a("p",[t._v("架构图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ichensw/drawing-bed/raw/master/image/49.png",alt:"49"}})]),t._v(" "),a("p",[t._v("以上只是其中一部分。")])])}),[],!1,null,null,null);s.default=e.exports}}]);